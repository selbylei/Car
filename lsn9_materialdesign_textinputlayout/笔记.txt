
1.提醒录屏。
2.调整上课状态。
	1）吃放安排。
	2）课前一定要适当休息。
3.适当记笔记整理笔记。
4.提前进教室。

以后大家没有声音或者画面的同学，退出当前画面重新进来或者退出YY重新进来！！！


==========================Material Design=====================================

一、关于Material Design
从Android5.0开始引入的，是一种全新的设计语言（翻译为“原材料设计”），其实是谷歌提倡的一种设计风格、理念、原则。
拟物设计和扁平化设计一种结合体验。还吸取了最新一些科技理念。
层次感：View Z轴

1.对于美工：遵循MD的界面设计、图标合集。
2.对于产品经理：遵循MD界面设计、页面的跳转及动画效果、交互设计。
3.对于开发人员：参与原型设计、辅助美工原型设计的素材准备。
		开发实现MD的设计----界面、动画、转场动画等等。


二、MD的使用及开发
	谷歌开放以及收集了一些最新的开源的项目(很多是自己开发的)，汇集到最新的support兼容支持包以及最新的5.X API里面。
	（preference：设置页面，可以通过配置文件达到界面设计的效果。）
	1）android-support-v4:最低兼容到Android 1.6系统，里面有类似ViewPager等控件。
	2）android-support-v7:appcompat、CardView、gridlayout、mediarouter、
	palette、preference、recyclerView(最低兼容到3.0) 
	最低兼容到Android 2.1的系统，这个工程可以让开发人员统一开发标准，在任何的系统版本下保证兼容性。
	（比如：Theme,value,布局，新的控件，新的动画特效实现）
	所以现在ADT、AndrodStudio一般都会直接创建项目的时候就直接帮你新建或者引入了一个叫做appcompat的项目。
	（这里可能会碰到很多问题：1.自动导入的appcompat-v7项目自身就是报错的，什么原因？build的版本太低了,要么是SDK很新但是兼容包没有更新。
					(还有的有其他的原因：1.没有将依赖的项目作为library，而且也没有将自己的项目加入该依赖项目。
					  2.multiple dex files。。。。appcompat/res/com.android.v7.R$anim 有文件冲突--一般是代表jar包冲突。
					  如何解决？删掉重复的jar )
				  2.appcompat-v7好不容易没报错，但是项目报错，一看控制台：报appcompat里面的某个res/values/theme/xxx属性不存在 等等问题。
				  什么原因？因为你引入的是很新的appcompat-v7项目，它要求必须很高的版本编译，然而Eclipse很蛋疼，在引入该项目的主项目编译的时候也必须要达到这个很高的版本---直接使用最高版本编译）


现在一般做开发都是最低兼容到4.0。
SDK升级：API升级、兼容包的升级、工具升级。
版本：1.compileSDK 编译版本；
	2.minSDK 兼容到最低版本是多少
	3.targetSDK;

SDK更新的历史上几个特别重要的版本：14（4.0）、19（4.4）、21（5.0）

关于Eclipse项目如何导入到AndroidStudio。百度。
1.直接导入没问题；
2.有问题，导出项目的时候应该选择gradle模式导出, 再导入到as。（这种情况下都有可能还是报错，可能是gradle版本太低了 需要升级！）
3.直接在as里面建个项目，然后把所有的资源和代码拷贝过去 就欧了！！



--------------------------1.MaterialDesign控制项目全局样式-------------------------------
为什么要用appcompat项目，因为里面是谷歌精心准备的---解决android碎片化开发蛋疼的问题，让我们app编译出来在
各种高低版本之间、不同的厂商生产的ROM之间显示出来的效果UI控件等有一较一致的体验。


1.引入appcompat-v7项目（包括了android-support-v7-appcompat.jar和资源文件）
2.写自己的全局样式：
	<!--
		Base application theme, dependent on API level. This theme is replaced
		by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
	 -->
    <style name="AppBaseTheme" parent="Theme.AppCompat.Light">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->
    </style>

    <!-- Application theme. -->
    <style name="AppTheme" parent="AppBaseTheme">
        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
        <item name="android:textColor">@color/mytextcolor</item>
        <item name="colorPrimary">@color/colorPrimary_pink</item>
        <item name="colorPrimaryDark">@color/colorPrimary_pinkDark</item>
        <item name="android:windowBackground">@color/background</item>
	<item name="colorAccent">@color/accent_material_dark</item>
	 <!-- 设置虚拟导航栏背景颜色 -->
        <item name="android:navigationBarColor">@color/colorPrimary_pink</item>
    </style>
	colorPrimary：主色，
	colorPrimaryDark：主色--深色，一般可以用于状态栏颜色、底部导航栏
	colorAccent：（代表各个控件的基调颜色--CheckBox、RadioButton、ProgressBar等等）
	"android:textColor"：当前所有的文本颜色

----------------------------MaterialDesign兼容性控件的使用------------------------------------
尤其是在appcompat-V7里面有很多为兼容而生的控件
这样就可以做到高低版本和不同的ROM之间体验一致！还可以配合appcompat的主题使用达到体验一致性
1.android.support.v7.app.AlertDialog

2.进度条样式设置
 style="@style/Widget.AppCompat.ProgressBar.Horizontal"

3.SwipeRefreshLayout下拉刷新

4.PopupWindow
	ListPopupWindow
	PopupMenu

5.android.support.v7.widget.LinearLayoutCompat 
给包裹在里面的所有子控件添加间隔线
        <android.support.v7.widget.LinearLayoutCompat
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:divider="@drawable/abc_list_divider_mtrl_alpha"
            app:showDividers="beginning|middle"
            android:orientation="vertical" >


-----------------------------V7 RecyclerView-----------------------------------
特点：
1.谷歌在高级版本提出一个新的替代ListView、GridView的控件。
2.高度解耦。
3.自带了性能优化。ViewHolder。
软件：低耦合高内聚。

RecyclerView没有条目点击事件，需要自己写。


作业：
1.封装一个简单的BaseRecyclerAdapter。
2.解决position可能错位的问题。
3.设置条目长按事件



作业：
1.看源码LinearLayoutCompat ，分析实现的原理:是如何做到给里面的所有的child之间添加间隔线的？
	
	View的绘制会经过三个方法：onMearsue（测量自身和里面的所有子控件）,onLayout（摆放里面所有的子控件）,onDraw（绘制）
	猜想：1）mearsuredWidth,mearsuredHeight会变大（加上间隔线）；2）摆放子控件位置会有一定的体现（childView: left/top/right/bottom）；
		3)onDraw绘制的时候也会有提现（childView: left/top/right/bottom）；



2.解决本次课的瀑布流效果的bug
报错：NullPointException----LayoutParams为空

View.inflate(viewGroup.getContext(), android.R.layout.simple_list_item_1, null)
最终都会调用该方法：
inflate(resource, root, root != null);
inflate(resource, null, false);

经过修改：
MyViewHolder holder = new MyViewHolder(View.inflate(viewGroup.getContext(), android.R.layout.simple_list_item_1, viewGroup));
还是报错：
java.lang.IllegalStateException: 
The specified child already has a parent. You must call removeView() on the child's parent first.
默认还是调用的：
inflate(resource, root, root != null);
inflate(resource, root, true);
看源码就知道：多做了一个事情就是
 if (root != null && attachToRoot) {
                        root.addView(temp, params);
                    }

由于RecyclerView/ListView会自动将child添加到它里面去

为何Fragment的onCreateView又可以呢？


最终结局办法：
首先，root不为null, boolean(attachToRoot)必须为false。
inflate(resource, root, false);

------------------------RecyclerView设置分割线---------------------------
1.RecyclerView没有默认的分割线，需要自己绘制。
RecyclerView.ItemDecoration
	1)线性的分割线
	2）网格的分割线

1）.可以通过修改Theme.Appcompa主题样式里面的android:listSelector或者 android:listDivider属性
	达到改变间隔线的大小和颜色哦！（自己尝试下）
		    <style name="AppTheme" parent="AppBaseTheme">
			<item name="android:listDivider">@drawable/item_divider</item>
		    </style>
	2）.写一个条目装饰类，继承
	class MyItemDecoration extends RecyclerView.ItemDecoration{
	}

绘制分发。
	绘制REcyclerView的时候会分发Canvas到ItemDecoration里面。

作业：
	1。现在DividerGridViewItemDecoration还有不完善的吗？
	效果上面
	2。看ItemDecoration的绘制分发的过程源码粗略分析


------------------------RecyclerView 如何添加头部和底部---------------------------
ListView.addHeadView();
ListView.addFooterView();

RecyclerView没有这样的方法，需要自己解决
所以我们通过看ListView的源码学习如何解决这个问题！！

ListView.addHeaderView(){
	 if (mAdapter != null) {
            if (!(mAdapter instanceof HeaderViewListAdapter)) {
                mAdapter = new HeaderViewListAdapter(mHeaderViewInfos, mFooterViewInfos, mAdapter);
            }
};
ListView.setAdapter(){
	if (mHeaderViewInfos.size() > 0|| mFooterViewInfos.size() > 0) {
            mAdapter = new HeaderViewListAdapter(mHeaderViewInfos, mFooterViewInfos, adapter);
        } else {
            mAdapter = adapter;
        }
}

ListView.setAdapter(new SimpleAdapter(xxx))

使用了中间代理模式解决的。模仿！！

注意：刷新问题
				//注意：如果添加了头部的话，这样刷新是没有效果的
//				adapter.notifyDataSetChanged();
				//需要拿到真正的adapter（因为我们自定义REcyclerView里面是包装了一层新的adapter）
//				recyclerView.getAdapter().notifyDataSetChanged();
				//这里还要注意position的问题，因为header也是属于条目的一部分，所以position都要往下移1位才行
				recyclerView.getAdapter().notifyItemInserted(1);



作业:
	1.思考，如何实现更多条目的装饰效果，比如：联系人条目的左侧添加首字母装饰。

-------------------------------RecyclerView交互动画---------------------------------------------------------
ItemTouchHelper







作业：1.解决课上的bug：滑动删除的时候，然后再滑动页面，结果有的条目不出现了 有空白的地方。
	原因：ListView和RecyclerView都会有复用条目itemView。这样就会导致上面的问题。
	解决：很多。比如在clearView回调方法里面去恢复这些条目的状态
	@Override
	public void clearView(RecyclerView recyclerView, ViewHolder viewHolder) {
		// 恢复
		viewHolder.itemView.setBackgroundColor(Color.WHITE);
		
//		viewHolder.itemView.setAlpha(1);//1~0
//		viewHolder.itemView.setScaleX(1);//1~0
//		viewHolder.itemView.setScaleY(1);//1~0
		super.clearView(recyclerView, viewHolder);
	}


2.类似QQ的条目侧滑一半的效果
提示：
	方法一：判断
	//判断是否超出或者达到width/2，就让其setTranslationX位一般的位置
		if(Math.abs(dX)<=viewHolder.itemView.getWidth()/2){
			viewHolder.itemView.setTranslationX(-0.5f*viewHolder.itemView.getWidth());
		}else{
			viewHolder.itemView.setTranslationX(dX);
		}
	方法二：ItemView就是一个ViewPager，上面的view可以朝反方向设置TranslationX


-------------------------------------MateriaDesign侧滑----------------------------------------------
以前是有民间的效果：SliddingMenu

侧滑两种效果：1.盖在整个页面上面；2.在Toolbar下面。
在MD提出来以后，谷歌就收录并改变了很多开源项目，放到API及support包里面。
1.DrawerLayout 抽屉容器
	来自support-v4包里面的。（android.support.v4.widget）
	相当于一个自定义容器 extends ViewGroup ,可以看出是一个有侧滑效果的帧布局
	两个部分：1）内容布局；2）侧滑出来的菜单布局


	

2.NavigationView
	是谷歌在侧滑的MaterialDesign的一种规范，所以提出了一个新的控件，用来规范侧滑的基本样式。
DrawerLayout+ NavigationView结合使用

注意：使用NavigationView，需要依赖项目：Design项目。
	同时还需要依赖recyclerView项目和CardView项目！！！！


	

作业：
1.实现侧滑效果，点击菜单实现fragment切换。
2.如何关联菜单按钮，实现打开和关闭侧滑菜单。

---------------------------------------SnackBar----------------------------------------------
Snackbar:的提出实际上是界于Toast和Dialog的中间产物。
Toast: 用户无法交互；
Dialog：用户可以交互，但是体验会打折扣，会阻断用户的连贯性操作；
Snackbar既可以做到轻量级的用户提醒效果，又可以有交互的功能（必须是一种非必须的操作）。

自定义吐司：

源码分析：
do{
	//不断地查找parent,实际上就是找到最外层的FrameLayout
	view.getParent();
}while()
.......
rootView.addView(view);//添加到最外层的布局容器里面

-------------------------------------TextInputLayout------------------------------------------
是强大的带提示的MD风格的Edittext
看源码：TextInputLayout extends android.widget.LinearLayout
<android.support.design.widget.TextInputLayout
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" 
        app:hintAnimationEnabled="true"
        >
        <EditText
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:hint="请输入用户名" />
</android.support.design.widget.TextInputLayout>

app:hintAnimationEnabled="true" ： 是否获得焦点的时候hint提示问题会动画地移动上去。
app:errorEnabled="true" 是都打开错误提示。
要使用错误提示还得自己定义规则。
 app:counterTextAppearance="" 可以自己修改计数的文字样式。
app:counterOverflowTextAppearance="" 超出字数范围后显示的警告的文字样式


源码分析



